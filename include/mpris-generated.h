/*
 * Generated by gdbus-codegen 2.50.2. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MPRIS_GENERATED_H__
#define __MPRIS_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.DBus.Properties */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES (polybar_org_freedesktop_dbus_properties_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES, PolybarOrgFreedesktopDBusProperties))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PROPERTIES(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES, PolybarOrgFreedesktopDBusPropertiesIface))

struct _PolybarOrgFreedesktopDBusProperties;
typedef struct _PolybarOrgFreedesktopDBusProperties PolybarOrgFreedesktopDBusProperties;
typedef struct _PolybarOrgFreedesktopDBusPropertiesIface PolybarOrgFreedesktopDBusPropertiesIface;

struct _PolybarOrgFreedesktopDBusPropertiesIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_get) (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_interface_name,
    const gchar *arg_property_name);

  gboolean (*handle_get_all) (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_interface_name);

  gboolean (*handle_set) (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_interface_name,
    const gchar *arg_property_name,
    GVariant *arg_value);

  void (*properties_changed) (
    PolybarOrgFreedesktopDBusProperties *object,
    const gchar *arg_interface_name,
    GVariant *arg_changed_properties,
    const gchar *const *arg_invalidated_properties);

};

GType polybar_org_freedesktop_dbus_properties_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *polybar_org_freedesktop_dbus_properties_interface_info (void);
guint polybar_org_freedesktop_dbus_properties_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void polybar_org_freedesktop_dbus_properties_complete_get (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation,
    GVariant *value);

void polybar_org_freedesktop_dbus_properties_complete_get_all (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation,
    GVariant *properties);

void polybar_org_freedesktop_dbus_properties_complete_set (
    PolybarOrgFreedesktopDBusProperties *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void polybar_org_freedesktop_dbus_properties_emit_properties_changed (
    PolybarOrgFreedesktopDBusProperties *object,
    const gchar *arg_interface_name,
    GVariant *arg_changed_properties,
    const gchar *const *arg_invalidated_properties);



/* D-Bus method calls: */
void polybar_org_freedesktop_dbus_properties_call_get (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    const gchar *arg_property_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_properties_call_get_finish (
    PolybarOrgFreedesktopDBusProperties *proxy,
    GVariant **out_value,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_properties_call_get_sync (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    const gchar *arg_property_name,
    GVariant **out_value,
    GCancellable *cancellable,
    GError **error);

void polybar_org_freedesktop_dbus_properties_call_get_all (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_properties_call_get_all_finish (
    PolybarOrgFreedesktopDBusProperties *proxy,
    GVariant **out_properties,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_properties_call_get_all_sync (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    GVariant **out_properties,
    GCancellable *cancellable,
    GError **error);

void polybar_org_freedesktop_dbus_properties_call_set (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    const gchar *arg_property_name,
    GVariant *arg_value,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_properties_call_set_finish (
    PolybarOrgFreedesktopDBusProperties *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_properties_call_set_sync (
    PolybarOrgFreedesktopDBusProperties *proxy,
    const gchar *arg_interface_name,
    const gchar *arg_property_name,
    GVariant *arg_value,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY (polybar_org_freedesktop_dbus_properties_proxy_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY, PolybarOrgFreedesktopDBusPropertiesProxy))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY, PolybarOrgFreedesktopDBusPropertiesProxyClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY, PolybarOrgFreedesktopDBusPropertiesProxyClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_PROXY))

typedef struct _PolybarOrgFreedesktopDBusPropertiesProxy PolybarOrgFreedesktopDBusPropertiesProxy;
typedef struct _PolybarOrgFreedesktopDBusPropertiesProxyClass PolybarOrgFreedesktopDBusPropertiesProxyClass;
typedef struct _PolybarOrgFreedesktopDBusPropertiesProxyPrivate PolybarOrgFreedesktopDBusPropertiesProxyPrivate;

struct _PolybarOrgFreedesktopDBusPropertiesProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PolybarOrgFreedesktopDBusPropertiesProxyPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusPropertiesProxyClass
{
  GDBusProxyClass parent_class;
};

GType polybar_org_freedesktop_dbus_properties_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusPropertiesProxy, g_object_unref)
#endif

void polybar_org_freedesktop_dbus_properties_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusProperties *polybar_org_freedesktop_dbus_properties_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusProperties *polybar_org_freedesktop_dbus_properties_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void polybar_org_freedesktop_dbus_properties_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusProperties *polybar_org_freedesktop_dbus_properties_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusProperties *polybar_org_freedesktop_dbus_properties_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON (polybar_org_freedesktop_dbus_properties_skeleton_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON, PolybarOrgFreedesktopDBusPropertiesSkeleton))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON, PolybarOrgFreedesktopDBusPropertiesSkeletonClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON, PolybarOrgFreedesktopDBusPropertiesSkeletonClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PROPERTIES_SKELETON))

typedef struct _PolybarOrgFreedesktopDBusPropertiesSkeleton PolybarOrgFreedesktopDBusPropertiesSkeleton;
typedef struct _PolybarOrgFreedesktopDBusPropertiesSkeletonClass PolybarOrgFreedesktopDBusPropertiesSkeletonClass;
typedef struct _PolybarOrgFreedesktopDBusPropertiesSkeletonPrivate PolybarOrgFreedesktopDBusPropertiesSkeletonPrivate;

struct _PolybarOrgFreedesktopDBusPropertiesSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  PolybarOrgFreedesktopDBusPropertiesSkeletonPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusPropertiesSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType polybar_org_freedesktop_dbus_properties_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusPropertiesSkeleton, g_object_unref)
#endif

PolybarOrgFreedesktopDBusProperties *polybar_org_freedesktop_dbus_properties_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.DBus.Introspectable */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE (polybar_org_freedesktop_dbus_introspectable_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE, PolybarOrgFreedesktopDBusIntrospectable))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE, PolybarOrgFreedesktopDBusIntrospectableIface))

struct _PolybarOrgFreedesktopDBusIntrospectable;
typedef struct _PolybarOrgFreedesktopDBusIntrospectable PolybarOrgFreedesktopDBusIntrospectable;
typedef struct _PolybarOrgFreedesktopDBusIntrospectableIface PolybarOrgFreedesktopDBusIntrospectableIface;

struct _PolybarOrgFreedesktopDBusIntrospectableIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_introspect) (
    PolybarOrgFreedesktopDBusIntrospectable *object,
    GDBusMethodInvocation *invocation);

};

GType polybar_org_freedesktop_dbus_introspectable_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *polybar_org_freedesktop_dbus_introspectable_interface_info (void);
guint polybar_org_freedesktop_dbus_introspectable_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void polybar_org_freedesktop_dbus_introspectable_complete_introspect (
    PolybarOrgFreedesktopDBusIntrospectable *object,
    GDBusMethodInvocation *invocation,
    const gchar *xml_data);



/* D-Bus method calls: */
void polybar_org_freedesktop_dbus_introspectable_call_introspect (
    PolybarOrgFreedesktopDBusIntrospectable *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_introspectable_call_introspect_finish (
    PolybarOrgFreedesktopDBusIntrospectable *proxy,
    gchar **out_xml_data,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_introspectable_call_introspect_sync (
    PolybarOrgFreedesktopDBusIntrospectable *proxy,
    gchar **out_xml_data,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY (polybar_org_freedesktop_dbus_introspectable_proxy_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY, PolybarOrgFreedesktopDBusIntrospectableProxy))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY, PolybarOrgFreedesktopDBusIntrospectableProxyClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY, PolybarOrgFreedesktopDBusIntrospectableProxyClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_PROXY))

typedef struct _PolybarOrgFreedesktopDBusIntrospectableProxy PolybarOrgFreedesktopDBusIntrospectableProxy;
typedef struct _PolybarOrgFreedesktopDBusIntrospectableProxyClass PolybarOrgFreedesktopDBusIntrospectableProxyClass;
typedef struct _PolybarOrgFreedesktopDBusIntrospectableProxyPrivate PolybarOrgFreedesktopDBusIntrospectableProxyPrivate;

struct _PolybarOrgFreedesktopDBusIntrospectableProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PolybarOrgFreedesktopDBusIntrospectableProxyPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusIntrospectableProxyClass
{
  GDBusProxyClass parent_class;
};

GType polybar_org_freedesktop_dbus_introspectable_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusIntrospectableProxy, g_object_unref)
#endif

void polybar_org_freedesktop_dbus_introspectable_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusIntrospectable *polybar_org_freedesktop_dbus_introspectable_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusIntrospectable *polybar_org_freedesktop_dbus_introspectable_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void polybar_org_freedesktop_dbus_introspectable_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusIntrospectable *polybar_org_freedesktop_dbus_introspectable_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusIntrospectable *polybar_org_freedesktop_dbus_introspectable_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON (polybar_org_freedesktop_dbus_introspectable_skeleton_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON, PolybarOrgFreedesktopDBusIntrospectableSkeleton))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON, PolybarOrgFreedesktopDBusIntrospectableSkeletonClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON, PolybarOrgFreedesktopDBusIntrospectableSkeletonClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_INTROSPECTABLE_SKELETON))

typedef struct _PolybarOrgFreedesktopDBusIntrospectableSkeleton PolybarOrgFreedesktopDBusIntrospectableSkeleton;
typedef struct _PolybarOrgFreedesktopDBusIntrospectableSkeletonClass PolybarOrgFreedesktopDBusIntrospectableSkeletonClass;
typedef struct _PolybarOrgFreedesktopDBusIntrospectableSkeletonPrivate PolybarOrgFreedesktopDBusIntrospectableSkeletonPrivate;

struct _PolybarOrgFreedesktopDBusIntrospectableSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  PolybarOrgFreedesktopDBusIntrospectableSkeletonPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusIntrospectableSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType polybar_org_freedesktop_dbus_introspectable_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusIntrospectableSkeleton, g_object_unref)
#endif

PolybarOrgFreedesktopDBusIntrospectable *polybar_org_freedesktop_dbus_introspectable_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.freedesktop.DBus.Peer */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER (polybar_org_freedesktop_dbus_peer_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER, PolybarOrgFreedesktopDBusPeer))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PEER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER, PolybarOrgFreedesktopDBusPeerIface))

struct _PolybarOrgFreedesktopDBusPeer;
typedef struct _PolybarOrgFreedesktopDBusPeer PolybarOrgFreedesktopDBusPeer;
typedef struct _PolybarOrgFreedesktopDBusPeerIface PolybarOrgFreedesktopDBusPeerIface;

struct _PolybarOrgFreedesktopDBusPeerIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_machine_id) (
    PolybarOrgFreedesktopDBusPeer *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_ping) (
    PolybarOrgFreedesktopDBusPeer *object,
    GDBusMethodInvocation *invocation);

};

GType polybar_org_freedesktop_dbus_peer_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *polybar_org_freedesktop_dbus_peer_interface_info (void);
guint polybar_org_freedesktop_dbus_peer_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void polybar_org_freedesktop_dbus_peer_complete_ping (
    PolybarOrgFreedesktopDBusPeer *object,
    GDBusMethodInvocation *invocation);

void polybar_org_freedesktop_dbus_peer_complete_get_machine_id (
    PolybarOrgFreedesktopDBusPeer *object,
    GDBusMethodInvocation *invocation,
    const gchar *machine_uuid);



/* D-Bus method calls: */
void polybar_org_freedesktop_dbus_peer_call_ping (
    PolybarOrgFreedesktopDBusPeer *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_peer_call_ping_finish (
    PolybarOrgFreedesktopDBusPeer *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_peer_call_ping_sync (
    PolybarOrgFreedesktopDBusPeer *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_freedesktop_dbus_peer_call_get_machine_id (
    PolybarOrgFreedesktopDBusPeer *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_freedesktop_dbus_peer_call_get_machine_id_finish (
    PolybarOrgFreedesktopDBusPeer *proxy,
    gchar **out_machine_uuid,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_freedesktop_dbus_peer_call_get_machine_id_sync (
    PolybarOrgFreedesktopDBusPeer *proxy,
    gchar **out_machine_uuid,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY (polybar_org_freedesktop_dbus_peer_proxy_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY, PolybarOrgFreedesktopDBusPeerProxy))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY, PolybarOrgFreedesktopDBusPeerProxyClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY, PolybarOrgFreedesktopDBusPeerProxyClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PEER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PEER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_PROXY))

typedef struct _PolybarOrgFreedesktopDBusPeerProxy PolybarOrgFreedesktopDBusPeerProxy;
typedef struct _PolybarOrgFreedesktopDBusPeerProxyClass PolybarOrgFreedesktopDBusPeerProxyClass;
typedef struct _PolybarOrgFreedesktopDBusPeerProxyPrivate PolybarOrgFreedesktopDBusPeerProxyPrivate;

struct _PolybarOrgFreedesktopDBusPeerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PolybarOrgFreedesktopDBusPeerProxyPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusPeerProxyClass
{
  GDBusProxyClass parent_class;
};

GType polybar_org_freedesktop_dbus_peer_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusPeerProxy, g_object_unref)
#endif

void polybar_org_freedesktop_dbus_peer_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusPeer *polybar_org_freedesktop_dbus_peer_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusPeer *polybar_org_freedesktop_dbus_peer_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void polybar_org_freedesktop_dbus_peer_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgFreedesktopDBusPeer *polybar_org_freedesktop_dbus_peer_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgFreedesktopDBusPeer *polybar_org_freedesktop_dbus_peer_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON (polybar_org_freedesktop_dbus_peer_skeleton_get_type ())
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON, PolybarOrgFreedesktopDBusPeerSkeleton))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON, PolybarOrgFreedesktopDBusPeerSkeletonClass))
#define POLYBAR_ORG_FREEDESKTOP_DBUS_PEER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON, PolybarOrgFreedesktopDBusPeerSkeletonClass))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PEER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON))
#define POLYBAR_IS_ORG_FREEDESKTOP_DBUS_PEER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_FREEDESKTOP_DBUS_PEER_SKELETON))

typedef struct _PolybarOrgFreedesktopDBusPeerSkeleton PolybarOrgFreedesktopDBusPeerSkeleton;
typedef struct _PolybarOrgFreedesktopDBusPeerSkeletonClass PolybarOrgFreedesktopDBusPeerSkeletonClass;
typedef struct _PolybarOrgFreedesktopDBusPeerSkeletonPrivate PolybarOrgFreedesktopDBusPeerSkeletonPrivate;

struct _PolybarOrgFreedesktopDBusPeerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  PolybarOrgFreedesktopDBusPeerSkeletonPrivate *priv;
};

struct _PolybarOrgFreedesktopDBusPeerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType polybar_org_freedesktop_dbus_peer_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgFreedesktopDBusPeerSkeleton, g_object_unref)
#endif

PolybarOrgFreedesktopDBusPeer *polybar_org_freedesktop_dbus_peer_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2 */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2 (polybar_org_mpris_media_player2_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2, PolybarOrgMprisMediaPlayer2))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2, PolybarOrgMprisMediaPlayer2Iface))

struct _PolybarOrgMprisMediaPlayer2;
typedef struct _PolybarOrgMprisMediaPlayer2 PolybarOrgMprisMediaPlayer2;
typedef struct _PolybarOrgMprisMediaPlayer2Iface PolybarOrgMprisMediaPlayer2Iface;

struct _PolybarOrgMprisMediaPlayer2Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_quit) (
    PolybarOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_raise) (
    PolybarOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_quit) (PolybarOrgMprisMediaPlayer2 *object);

  gboolean  (*get_can_raise) (PolybarOrgMprisMediaPlayer2 *object);

  const gchar * (*get_desktop_entry) (PolybarOrgMprisMediaPlayer2 *object);

  gboolean  (*get_has_track_list) (PolybarOrgMprisMediaPlayer2 *object);

  const gchar * (*get_identity) (PolybarOrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_mime_types) (PolybarOrgMprisMediaPlayer2 *object);

  const gchar *const * (*get_supported_uri_schemes) (PolybarOrgMprisMediaPlayer2 *object);

};

GType polybar_org_mpris_media_player2_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *polybar_org_mpris_media_player2_interface_info (void);
guint polybar_org_mpris_media_player2_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void polybar_org_mpris_media_player2_complete_raise (
    PolybarOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_complete_quit (
    PolybarOrgMprisMediaPlayer2 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void polybar_org_mpris_media_player2_call_raise (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_call_raise_finish (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_call_raise_sync (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_call_quit (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_call_quit_finish (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_call_quit_sync (
    PolybarOrgMprisMediaPlayer2 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean polybar_org_mpris_media_player2_get_can_quit (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_can_quit (PolybarOrgMprisMediaPlayer2 *object, gboolean value);

gboolean polybar_org_mpris_media_player2_get_can_raise (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_can_raise (PolybarOrgMprisMediaPlayer2 *object, gboolean value);

gboolean polybar_org_mpris_media_player2_get_has_track_list (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_has_track_list (PolybarOrgMprisMediaPlayer2 *object, gboolean value);

const gchar *polybar_org_mpris_media_player2_get_identity (PolybarOrgMprisMediaPlayer2 *object);
gchar *polybar_org_mpris_media_player2_dup_identity (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_identity (PolybarOrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *polybar_org_mpris_media_player2_get_desktop_entry (PolybarOrgMprisMediaPlayer2 *object);
gchar *polybar_org_mpris_media_player2_dup_desktop_entry (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_desktop_entry (PolybarOrgMprisMediaPlayer2 *object, const gchar *value);

const gchar *const *polybar_org_mpris_media_player2_get_supported_uri_schemes (PolybarOrgMprisMediaPlayer2 *object);
gchar **polybar_org_mpris_media_player2_dup_supported_uri_schemes (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_supported_uri_schemes (PolybarOrgMprisMediaPlayer2 *object, const gchar *const *value);

const gchar *const *polybar_org_mpris_media_player2_get_supported_mime_types (PolybarOrgMprisMediaPlayer2 *object);
gchar **polybar_org_mpris_media_player2_dup_supported_mime_types (PolybarOrgMprisMediaPlayer2 *object);
void polybar_org_mpris_media_player2_set_supported_mime_types (PolybarOrgMprisMediaPlayer2 *object, const gchar *const *value);


/* ---- */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY (polybar_org_mpris_media_player2_proxy_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, PolybarOrgMprisMediaPlayer2Proxy))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, PolybarOrgMprisMediaPlayer2ProxyClass))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY, PolybarOrgMprisMediaPlayer2ProxyClass))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PROXY))

typedef struct _PolybarOrgMprisMediaPlayer2Proxy PolybarOrgMprisMediaPlayer2Proxy;
typedef struct _PolybarOrgMprisMediaPlayer2ProxyClass PolybarOrgMprisMediaPlayer2ProxyClass;
typedef struct _PolybarOrgMprisMediaPlayer2ProxyPrivate PolybarOrgMprisMediaPlayer2ProxyPrivate;

struct _PolybarOrgMprisMediaPlayer2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PolybarOrgMprisMediaPlayer2ProxyPrivate *priv;
};

struct _PolybarOrgMprisMediaPlayer2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType polybar_org_mpris_media_player2_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgMprisMediaPlayer2Proxy, g_object_unref)
#endif

void polybar_org_mpris_media_player2_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgMprisMediaPlayer2 *polybar_org_mpris_media_player2_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgMprisMediaPlayer2 *polybar_org_mpris_media_player2_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void polybar_org_mpris_media_player2_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgMprisMediaPlayer2 *polybar_org_mpris_media_player2_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgMprisMediaPlayer2 *polybar_org_mpris_media_player2_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON (polybar_org_mpris_media_player2_skeleton_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, PolybarOrgMprisMediaPlayer2Skeleton))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, PolybarOrgMprisMediaPlayer2SkeletonClass))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON, PolybarOrgMprisMediaPlayer2SkeletonClass))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_SKELETON))

typedef struct _PolybarOrgMprisMediaPlayer2Skeleton PolybarOrgMprisMediaPlayer2Skeleton;
typedef struct _PolybarOrgMprisMediaPlayer2SkeletonClass PolybarOrgMprisMediaPlayer2SkeletonClass;
typedef struct _PolybarOrgMprisMediaPlayer2SkeletonPrivate PolybarOrgMprisMediaPlayer2SkeletonPrivate;

struct _PolybarOrgMprisMediaPlayer2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  PolybarOrgMprisMediaPlayer2SkeletonPrivate *priv;
};

struct _PolybarOrgMprisMediaPlayer2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType polybar_org_mpris_media_player2_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgMprisMediaPlayer2Skeleton, g_object_unref)
#endif

PolybarOrgMprisMediaPlayer2 *polybar_org_mpris_media_player2_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2.Player */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER (polybar_org_mpris_media_player2_player_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER, PolybarOrgMprisMediaPlayer2Player))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER, PolybarOrgMprisMediaPlayer2PlayerIface))

struct _PolybarOrgMprisMediaPlayer2Player;
typedef struct _PolybarOrgMprisMediaPlayer2Player PolybarOrgMprisMediaPlayer2Player;
typedef struct _PolybarOrgMprisMediaPlayer2PlayerIface PolybarOrgMprisMediaPlayer2PlayerIface;

struct _PolybarOrgMprisMediaPlayer2PlayerIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_next) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_open_uri) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_Uri);

  gboolean (*handle_pause) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_play) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_play_pause) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_previous) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_seek) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    gint64 arg_Offset);

  gboolean (*handle_set_position) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_TrackId,
    gint64 arg_Position);

  gboolean (*handle_stop) (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_control) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_go_next) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_go_previous) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_pause) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_play) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_can_seek) (PolybarOrgMprisMediaPlayer2Player *object);

  const gchar * (*get_loop_status) (PolybarOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_maximum_rate) (PolybarOrgMprisMediaPlayer2Player *object);

  GVariant * (*get_metadata) (PolybarOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_minimum_rate) (PolybarOrgMprisMediaPlayer2Player *object);

  const gchar * (*get_playback_status) (PolybarOrgMprisMediaPlayer2Player *object);

  gint64  (*get_position) (PolybarOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_rate) (PolybarOrgMprisMediaPlayer2Player *object);

  gboolean  (*get_shuffle) (PolybarOrgMprisMediaPlayer2Player *object);

  gdouble  (*get_volume) (PolybarOrgMprisMediaPlayer2Player *object);

  void (*seeked) (
    PolybarOrgMprisMediaPlayer2Player *object,
    gint64 arg_Position);

};

GType polybar_org_mpris_media_player2_player_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *polybar_org_mpris_media_player2_player_interface_info (void);
guint polybar_org_mpris_media_player2_player_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void polybar_org_mpris_media_player2_player_complete_next (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_previous (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_pause (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_play_pause (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_stop (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_play (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_seek (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_set_position (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);

void polybar_org_mpris_media_player2_player_complete_open_uri (
    PolybarOrgMprisMediaPlayer2Player *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void polybar_org_mpris_media_player2_player_emit_seeked (
    PolybarOrgMprisMediaPlayer2Player *object,
    gint64 arg_Position);



/* D-Bus method calls: */
void polybar_org_mpris_media_player2_player_call_next (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_next_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_next_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_previous (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_previous_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_previous_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_pause (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_pause_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_pause_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_play_pause (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_play_pause_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_play_pause_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_stop (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_stop_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_stop_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_play (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_play_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_play_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_seek (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    gint64 arg_Offset,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_seek_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_seek_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    gint64 arg_Offset,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_set_position (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_TrackId,
    gint64 arg_Position,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_set_position_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_set_position_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_TrackId,
    gint64 arg_Position,
    GCancellable *cancellable,
    GError **error);

void polybar_org_mpris_media_player2_player_call_open_uri (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_Uri,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean polybar_org_mpris_media_player2_player_call_open_uri_finish (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    GAsyncResult *res,
    GError **error);

gboolean polybar_org_mpris_media_player2_player_call_open_uri_sync (
    PolybarOrgMprisMediaPlayer2Player *proxy,
    const gchar *arg_Uri,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *polybar_org_mpris_media_player2_player_get_playback_status (PolybarOrgMprisMediaPlayer2Player *object);
gchar *polybar_org_mpris_media_player2_player_dup_playback_status (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_playback_status (PolybarOrgMprisMediaPlayer2Player *object, const gchar *value);

const gchar *polybar_org_mpris_media_player2_player_get_loop_status (PolybarOrgMprisMediaPlayer2Player *object);
gchar *polybar_org_mpris_media_player2_player_dup_loop_status (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_loop_status (PolybarOrgMprisMediaPlayer2Player *object, const gchar *value);

gdouble polybar_org_mpris_media_player2_player_get_rate (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_rate (PolybarOrgMprisMediaPlayer2Player *object, gdouble value);

gboolean polybar_org_mpris_media_player2_player_get_shuffle (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_shuffle (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

GVariant *polybar_org_mpris_media_player2_player_get_metadata (PolybarOrgMprisMediaPlayer2Player *object);
GVariant *polybar_org_mpris_media_player2_player_dup_metadata (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_metadata (PolybarOrgMprisMediaPlayer2Player *object, GVariant *value);

gdouble polybar_org_mpris_media_player2_player_get_volume (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_volume (PolybarOrgMprisMediaPlayer2Player *object, gdouble value);

gint64 polybar_org_mpris_media_player2_player_get_position (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_position (PolybarOrgMprisMediaPlayer2Player *object, gint64 value);

gdouble polybar_org_mpris_media_player2_player_get_minimum_rate (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_minimum_rate (PolybarOrgMprisMediaPlayer2Player *object, gdouble value);

gdouble polybar_org_mpris_media_player2_player_get_maximum_rate (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_maximum_rate (PolybarOrgMprisMediaPlayer2Player *object, gdouble value);

gboolean polybar_org_mpris_media_player2_player_get_can_go_next (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_go_next (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean polybar_org_mpris_media_player2_player_get_can_go_previous (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_go_previous (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean polybar_org_mpris_media_player2_player_get_can_play (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_play (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean polybar_org_mpris_media_player2_player_get_can_pause (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_pause (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean polybar_org_mpris_media_player2_player_get_can_seek (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_seek (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);

gboolean polybar_org_mpris_media_player2_player_get_can_control (PolybarOrgMprisMediaPlayer2Player *object);
void polybar_org_mpris_media_player2_player_set_can_control (PolybarOrgMprisMediaPlayer2Player *object, gboolean value);


/* ---- */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY (polybar_org_mpris_media_player2_player_proxy_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, PolybarOrgMprisMediaPlayer2PlayerProxy))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, PolybarOrgMprisMediaPlayer2PlayerProxyClass))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY, PolybarOrgMprisMediaPlayer2PlayerProxyClass))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_PROXY))

typedef struct _PolybarOrgMprisMediaPlayer2PlayerProxy PolybarOrgMprisMediaPlayer2PlayerProxy;
typedef struct _PolybarOrgMprisMediaPlayer2PlayerProxyClass PolybarOrgMprisMediaPlayer2PlayerProxyClass;
typedef struct _PolybarOrgMprisMediaPlayer2PlayerProxyPrivate PolybarOrgMprisMediaPlayer2PlayerProxyPrivate;

struct _PolybarOrgMprisMediaPlayer2PlayerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  PolybarOrgMprisMediaPlayer2PlayerProxyPrivate *priv;
};

struct _PolybarOrgMprisMediaPlayer2PlayerProxyClass
{
  GDBusProxyClass parent_class;
};

GType polybar_org_mpris_media_player2_player_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgMprisMediaPlayer2PlayerProxy, g_object_unref)
#endif

void polybar_org_mpris_media_player2_player_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgMprisMediaPlayer2Player *polybar_org_mpris_media_player2_player_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgMprisMediaPlayer2Player *polybar_org_mpris_media_player2_player_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void polybar_org_mpris_media_player2_player_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
PolybarOrgMprisMediaPlayer2Player *polybar_org_mpris_media_player2_player_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
PolybarOrgMprisMediaPlayer2Player *polybar_org_mpris_media_player2_player_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON (polybar_org_mpris_media_player2_player_skeleton_get_type ())
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, PolybarOrgMprisMediaPlayer2PlayerSkeleton))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, PolybarOrgMprisMediaPlayer2PlayerSkeletonClass))
#define POLYBAR_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON, PolybarOrgMprisMediaPlayer2PlayerSkeletonClass))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON))
#define POLYBAR_IS_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), POLYBAR_TYPE_ORG_MPRIS_MEDIA_PLAYER2_PLAYER_SKELETON))

typedef struct _PolybarOrgMprisMediaPlayer2PlayerSkeleton PolybarOrgMprisMediaPlayer2PlayerSkeleton;
typedef struct _PolybarOrgMprisMediaPlayer2PlayerSkeletonClass PolybarOrgMprisMediaPlayer2PlayerSkeletonClass;
typedef struct _PolybarOrgMprisMediaPlayer2PlayerSkeletonPrivate PolybarOrgMprisMediaPlayer2PlayerSkeletonPrivate;

struct _PolybarOrgMprisMediaPlayer2PlayerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  PolybarOrgMprisMediaPlayer2PlayerSkeletonPrivate *priv;
};

struct _PolybarOrgMprisMediaPlayer2PlayerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType polybar_org_mpris_media_player2_player_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (PolybarOrgMprisMediaPlayer2PlayerSkeleton, g_object_unref)
#endif

PolybarOrgMprisMediaPlayer2Player *polybar_org_mpris_media_player2_player_skeleton_new (void);


G_END_DECLS

#endif /* __MPRIS_GENERATED_H__ */
